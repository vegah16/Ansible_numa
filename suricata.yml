---
- name: Setup Suricata
  hosts: ubuntu # Group in ansible hosts file.
  become: yes # Become root.
  vars:
    afpacket_interface: "{{ansible_default_ipv4.interface}}"
    afpacket_threads: "{{(ansible_processor_vcpus/2) | int}}" # Use half of available threads
    afpacket_clustertype: "cluster-qm"
    afpacket_defrag: "no"
    afpacket_usemmap: "yes"
    afpacket_mmaplocked: "yes"
    afpacket_tpacketv3: "yes"
    afpacket_ringsize: 100000
    afpacket_blocksize: 1048576
    threading_management_cpu: 0
    threading_receive_cpu: "0-1"
    threading_worker_cpu: 1
    threading_worker_prio_low: 0
    threading_worker_prio_medium: 1
    threading_worker_prio_high: 1
    threading_worker_prio_default: "high"
    
  tasks:

    - name: install system updates for centos systems
      yum: name=* state=latest update_cache=yes
      when: ansible_distribution == "CentOS"

    - name: install system updates for ubuntu systems
      apt: upgrade=dist update_cache=yes
      when: ansible_distribution == "Ubuntu"

    - name: Set passwordless sudo # To prevent entering the password when ansible executes.
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      
    - name: Install packages
      package:
        name:
          - suricata # IDS
          - jq  # Command-line JSON processor
          - ethtool # Query or control network driver and hardware settings
        state: latest

# Allow CPU cores to be isolated for use of general system processes. That way ensures total dedication of those CPUs/ranges for the Suricata process only.
# isolcpus=1-17,19-35,37-53,55-71 

    - name: Add the i40e module # Intel drivers
      community.general.modprobe:
        name: i40e
        state: present

# $ service irqbalance stop   # When doing high performance optimisation make sure irqbalance is off and not running

# $ ifconfig ens160 down    # Disable NIC. TODO: How to do this in Ansible? Necessary?
# $ ethtool -L eth1 combined 16   # Change the number of RSS queues.
# $ ethtool -K eth1 rxhash on    # Enable receive hashing offload
# $ ethtool -K eth1 ntuple on   # Enable Rx ntuple filters and actions
# $ ifconfig ens160 up    # Enable NIC
# $ ethtool -X ens160 hkey 6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A:6D:5A equal 16   # Make RSS symmetric
# $ ethtool -A ens160 rx off    # Disable RX pause. TODO: tx off?
# $ ethtool -C ens160 adaptive-rx off adaptive-tx off rx-usecs 125    # Changes the coalescing settings. Adaptive control is disabled for lowest possible latency. Setting rx-usecs to 125 will limit interrupts to about 8000 interrupts per second per queue.
# $ ethtool -G eth1 rx 1024   # Changes the number of ring entries for the Rx ring. TODO: test
# $ ethtool -X eth1 hfunc toeplitz    # Make sure the RSS hash function is Toeplitz.

# Let the NIC balance as much as possible: TODO: test
# for proto in tcp4 udp4 tcp6 udp6; do
#    ethtool -N eth1 rx-flow-hash $proto sdfn (or 'sd')
# done

    - name: Configure suricata  
      template:  
        src: suricata.yaml.j2  
        dest: /etc/suricata/suricata.yaml  

    - name: Update signatures
      command: suricata-update

    - name: Start suricata
      service:
        name: suricata
        state: restarted
        enabled: yes
